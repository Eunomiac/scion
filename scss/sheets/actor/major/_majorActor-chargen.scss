.chargenOne {
    .deed {
        margin: 3px 0;
        label { width: 100px; }
    }
}

.chargenTwo {
    .pathContainer .path-block { @import 'sheets/actor/major/blocks/path-block'; }
    .skillSummary {
        transform: scale(0.75);
        margin-left: 5%;
        .skills { 
            flex: 0 1 33%;
            margin: 0 5px;
            .dotline { margin: 3px 0; }
        }
    }
}

.chargenThree {
    .grid { 
        --gridHeight: calc(560px - 26px - 10px - 5px - 32px); 
        grid: "skillHeader skillHeader specHeader specHeader attrHeader attrHeader" 26px
              "skills skills specialties specialties attributes attributes" calc(var(--gridHeight) - 130px - 26px)
              "unassignedSkills unassignedSkills unassignedSkills unassignedAttrs unassignedAttrs unassignedAttrs" 130px/100px 100px 1fr 1fr 1fr 100px;

        h2 {
            text-indent: 0;
            &.skillHeader { grid-area: skillHeader; }
            &.specHeader { grid-area: specHeader; }
            &.attrHeader { grid-area: attrHeader; }
        }
        
        .skills { 
            grid-area: skills;
            .dotline-labelled {
                margin: 2px 0;
            } 
        }
        .specialties { 
            grid-area: specialties; 
            .specialty {
                width: 100%;
                height: 16px;
                min-height: 16px;
                max-height: 16px;
                margin: 2px;
                font-size: 14px;
                .specialtyInput {
                    min-height: 16px;
                    line-height: 16px;
                    margin: -2px 4px;
                    border-width: 2px;
                    &.placeholder {
                        font-size: 12px;
                    }
                }
            }
        }
        .attributes { 
            grid-area: attributes;
            .attribute-block {  
                margin: 0;
                border: 3px solid var(--accent);
                border-radius: 25px;
                padding: 0px 10px;
                background: var(--accentUp2Fade75);
                border-top-left-radius: 0;
                overflow: hidden;
                h3 {
                    font-size: 16px;
                    background: var(--bgH2);
                    margin-left: -10px;
                    text-indent: 4px;
                    width: 120%;
                }
            }
            .favoredApproach {
                h3 {
                    font-size: var(--fontSizeBody);
                    margin: 5px 0;
                }
                select {
                    width: 80%;
                    margin: 0px 5px 5px 5px;
                }
            }
        }
        .unassignedDots {
            flex: 0 0 50%;
            h2 { font-size: calc(var(--fontSizeH2) * 0.75) }
            &.unassignedSkillDots { 
                grid-area: unassignedSkills;
            }
            &.unassignedAttrDots {
                grid-area: unassignedAttrs;
                > div { margin: 3px 0; }
                label { width: 75px; min-width: 75px; }
            }
            div.reportBox {
                display: none !important;
                background-color: white !important;
                width: 320px !important;
                height: 80px !important;
                min-height: 80px !important;
                max-height: 80px !important;
                vertical-align: bottom !important;
                position: absolute;
                bottom: 20px;
                margin: 0;
                padding: 5px;
                outline: 3px solid green;
                padding-top: 3px;
                span.reportLine {
                    display: block !important;
                    height: 12px !important;
                    min-height: 12px !important;
                    max-height: 12px !important;
                    margin: 2px 0px !important;
                    padding: 0 !important;
                    font: {
                        size: 12px !important;
                        family: "Overlock SC" !important;
                        weight: bold !important;
                    }
                    line-height: 12px !important;
                    text: {
                        align: right !important;
                        align-last: right !important;
                        shadow: none !important;
                    }
                }
            }
        }
    }
}

.chargenFour {
    grid: "heading heading heading" 32px
        "dotsbin dotsbin dotsbin" 34px
        "calling1 calling2 calling3" 1fr
        "footer footer footer" 150px / 1fr 1fr 1fr;
    column-gap: 20px;
    > h1 { grid-area: heading; }
    > .unassignedDotsContainer { 
        grid-area: dotsbin; 
        > .unassignedCallingDots {
            align-content: flex-start;
            margin: 3px 0 0 5px;
            line-height: 26px;
            > h2 {
                width: auto;
                flex-basis: auto;
                margin-right: 5px;
                font-family: "Benguiat";
                color: var(--black);
                text-shadow: var(--textShadowTitle);

            }
            > .dotline {
                height: 26px;
                width: 50%;
                min-height: 26px;
                max-height: 26px;
                line-height: 26px;
                > .dotBin {
                    transform: scale(1.5);
                    transform-origin: left;
                }

            }
        }
    }

    .dot[data-types*="general"] {
        --dotBright: #999;
        --dotDark: #0a0a0a;
    }
    .dot[data-types*="unassigned"] {
        --dotBright: var(--accentUp4);
        --dotDark: var(--accentDown4);
    }

    > .calling {
        transition: 0.5s;
        transform: translateY(0px) scale(1);
        position: relative;

        // &.selected { transform: translateY(50px) scale(1.1) }
        
        &:nth-of-type(3) { grid-area: calling1; z-index: 49; }
        &:nth-of-type(4) { grid-area: calling2; z-index: 50; }
        &:nth-of-type(5) { grid-area: calling3; z-index: 49; }

        background: {
            image: url("../images/actor-sheet/backgrounds/calling.png");
            size: 100%;
            position: center;
            repeat: no-repeat;
        }

        &:not(.glow) { filter: drop-shadow(3px 3px 3px var(--black)); }

        > .gu-transit,
        .gu-unselectable > *,
        > .calling { display: none; }

        span.knack.empty { pointer-events: none; background-image: url("../images/bubbles/knack-empty.png"); }

        .dotline {
            margin-top: 15px;
            margin-bottom: 15px;
            transform: scale(1.5);
        }

        h1 {
            margin-top: 10px;
            border: none;
            font-size: calc(var(--fontSizeH1) * 1.5);
            text-transform: capitalize;
        }
        h2 { pointer-events: none; background: none; }

        div.knacksBackground {
            height: 100px;
            min-height: 100px;
            max-height: 100px;
            margin-bottom: -100px;
        }
        div.knacks {
            height: 180px;
            min-height: 180px;
            max-height: 180px;
            margin-top: -130px;
            margin-bottom: -60px;
            padding-top: 30px;
        }

        div.keywords {
            .contentEditable {
                flex: 0.4 0.4 40%;
                height: 14px;
                min-height: 14px;
                margin: 2px;
                border: {
                    width: 2px;
                    color: var(--greyUp1);
                }
                color: var(--black);
                font: {
                    family: "MercuryG2";
                    size: 14px;
                    weight: bold;
                    variant: small-caps;
                }
                line-height: 13px;
                text: {
                    indent: 0;
                    transform: lowercase;
                }
                @include text-shadow((1 0 0 0 var(--black)));
                background: {
                    image: url("../images/textures/stoneWhite.jpg");
                    size: 100%;
                    repeat: no-repeat;
                    position: bottom;
                }
                filter: drop-shadow(1px 1px 1px var(--black));
            }
        }

    }
  
    #callingsList.popout {
        width: 150px;
        height: 580px;
        left: 94%;
        top: 70px;
    }

    span.calling, h1.gu-mirror.callingHeader.handle {
        height: 40px;
        min-height: 40px;
        width: 120px;
        margin: 5px 0;
        display: block;
        color: var(--black);
        background: {
            image: url("../images/bubbles/calling-generic.png");
            size: 100%;
            position: center;
            repeat: no-repeat;
        }
        border: none;
        font: {
            family: Oswald;
            size: 24px;
            weight: normal;
        }
        line-height: 37px;
        text: {
            transform: uppercase;
            shadow: var(--textShadowTitle);
            align: center;
        }                
        filter: drop-shadow(2px 2px 2px black);

        &.patron {
            background-image: url("../images/bubbles/calling-patron.png");
        }

        &.invalid {
            background-image: none;
        }
    }
    span.knack {
        display: block;
        height: 20px;
        min-height: 20px;
        width: 176px;
        margin: 5px 0;
        color: var(--black);
        background: {
            image: url("../images/bubbles/knack-heroic.png");
            size: 100%;
            position: center;
            repeat: no-repeat;
        }
        border: none;
        font: {
            family: Oswald;
            size: 12px;
            weight: normal;
        }
        line-height: 20px;
        text: {
            transform: uppercase;
            shadow: var(--textShadowTitle);
            align: center;
        }                
        filter: drop-shadow(2px 2px 2px black);
        &:not(.invalid) {
            &.generic {
                background-image: url("../images/bubbles/knack-generic.png");
            }
            &.immortal {
                background-image: url("../images/bubbles/knack-immortal.png");
                height: 50px;
                min-height: 50px;
                line-height: 50px;
                font-size: 16px;
            }
        }
        &.invalid {
            background-image: none;
        }
    }

    .knacksList.popout {  
        overflow: visible;
        padding: 5px;
        // filter: drop-shadow(40px 30px 10px var(--blackFade25));
        > h1 {
            min-height: 28px;
            margin: 0 0 5px 0;
            color: var(--black);
            font: {
                family: Benguiat;
                size: 36px;
                variant: small-caps;
            }
            line-height: 24px;
            text: {
                transform: lowercase;
            }
            background: none;
            border: none;
        }
        > div { 
            padding: 0 0 10px 0;
            justify-content: space-around;
            height: calc(100% - 28px - 5px);
        }
        &.floatTop, &.floatBottom {
            --panelWidth: 380px;
            width: var(--panelWidth);
            left: calc(50% - 0.5*(var(--panelWidth) + 2 * (var(--borderWidth) + 5px) + 15px));
            border-width: var(--borderWidth);
            > div { padding-bottom: 0px; }
        }
        &.floatBottom { --borderWidth: 10px; top: calc(100% - 210px); z-index: 60; }
        &.floatTop { --borderWidth: 4px; bottom: calc(100% - 235px); z-index: 40; padding: 2px; } 
        &.floatLeft, &.floatRight {
            --panelHeight: 350px;
            height: var(--panelHeight);
            width: 180px;
            top: calc((100% - var(--panelHeight)) / 2);
            justify-content: space-between;
            z-index: 48;
        }
        &.floatLeft { left: -180px; }
        &.floatRight { right: -150px; }

        span.knack, span.knack.immortal {
            margin: 3px 2px;
            height: 20px;
            min-height: 20px;
            line-height: 20px;
            font-size: 12px;
            &.invalid {
                height: 16px;
                min-height: 16px;
                line-height: 16px;
            }
        }
    }

    .footer { 
        grid-area: footer; 
    }
}
