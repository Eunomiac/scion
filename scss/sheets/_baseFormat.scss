* {
    /* #region Element Default Styles */
    color: var(--colorBody);
    font: {
        family: var(--fontFamilyBody);
        size: var(--fontSizeBody);
        weight: var(--fontWeightBody);
        style: var(--fontStyleBody);
        variant: var(--fontVariantBody);
    }
    text: {
        transform: var(--textTransformBody);
        shadow: var(--textShadowBody);
    }
    line-height: var(--lineHeightBody);

    textarea,
    input[type="text"],
    select,
    .contentEditable {
        margin: 0 4px;
        padding: var(--paddingInput);
        line-height: var(--lineHeightInput);
        max-height: var(--maxHeightInput);
        min-height: var(--maxHeightInput);

        font: {
            family: var(--fontFamilyInput);
            size: var(--fontSizeInput);
            style: var(--fontStyleInput);
            variant: var(--fontVariantInput);
            weight: var(--fontWeightInput);
        }
        text: {
            transform: var(--textTransformInput);
            indent: var(--textIndentInput);
            shadow: var(--textShadowInput);
        }

        box-shadow: none;
        border: var(--borderInput);
        box-sizing: content-box;
        outline: none;
        overflow: hidden;
        

        &:invalid { @include placeholderText; }
    }

    h1, h2, h3, .h1, .h2, .h3 { width: 100%; margin: 0; }

    h1, h2, .h1, .h2 { display: block; text-indent: 15px; }

    h1, .h1 {
        color: var(--colorH1);
        background: var(--bgH1);
        padding: var(--paddingH1);
        max-height: var(--maxHeightH1);
        min-height: var(--maxHeightH1);
        line-height: var(--lineHeightH1);
        font: {
            family: var(--fontFamilyH1);
            style: var(--fontStyleH1);
            variant: var(--fontVariantH1);
            weight: var(--fontWeightH1);
            size: var(--fontSizeH1);
        }
        text: {
            transform: var(--textTransformH1);
            shadow: var(--textShadowH1);
            indent: var(--textIndentH1);
        }
        border-bottom: var(--borderH1);
    }

    h2, .h2 {
        color: var(--colorH2);
        background: var(--bgH2);
        padding: var(--paddingH2);
        max-height: var(--maxHeightH2);
        min-height: var(--maxHeightH2);
        line-height: var(--lineHeightH2);
        font: {
            family: var(--fontFamilyH2);
            style: var(--fontStyleH2);
            variant: var(--fontVariantH2);
            weight: var(--fontWeightH2);
            size: var(--fontSizeH2);
        }
        text: {
            transform: var(--textTransformH2);
            shadow: var(--textShadowH2);
            indent: var(--textIndentH2);
        }
        border-bottom: var(--borderH2);
    }

    h3, .h3 {
        color: var(--colorH3);
        background: var(--bgH3);
        padding: var(--paddingH3);
        max-height: var(--maxHeightH3);
        min-height: var(--maxHeightH3);
        line-height: var(--lineHeightH3);
        font: {
            family: var(--fontFamilyH3);
            style: var(--fontStyleH3);
            variant: var(--fontVariantH3);
            weight: var(--fontWeightH3);
            size: var(--fontSizeH3);
        }
        text: {
            transform: var(--textTransformH3);
            shadow: var(--textShadowH3);
            indent: var(--textIndentH3);
        }
        border-bottom: var(--borderH3);
    }

    label { 
        font-size: var(--fontSizeBody);
        margin: 0 4px;
    }

    /* HOW TO TRIGGER A FUNCTION WHEN AN ANIMATION OR TRANSITION IS COMPLETE:

        $( '.item' ).addClass( 'disappear' ).on( 'webkitAnimationEnd mozAnimationEnd oAnimationEnd oanimationend animationend', () => { $( this ).remove(); });
            // The added "disappear" class contains either an animation or a transition, which starts immediately.
            //    When the animation/transition is finished, the callback function removes the element.
    */

    /* #endregion */

    /* #region Single-Purpose Classes */
    .readonly {
        pointer-events: none !important;
        resize: none !important;
        overflow: hidden !important;
    }

    .insetFrame {
        color: var(--colorBody);
        font: {
        family: var(--fontFamilyBody);
        size: var(--fontSizeBody);
        weight: var(--fontWeightBody);
        }
        border-radius: 1rem;
        background: var(--accentDown3Fade75);
        border: inset 3px var(--accentUp1);
    }

    .outsetFrame {
        color: var(--colorBody);
        font: {
            family: var(--fontFamilyBody);
            size: var(--fontSizeBody);
        }
        border-radius: 1rem;
        background: var(--accentUp3Fade75);
        border: outset 3px var(--accentUp1);
    }

    .hidden { display: none !important; }

    .text {
        color: var(--colorBody) !important;
        font: { size: var(--fontSizeBody) !important; }
    }

    .inline { 
        display: inline-block !important;

        &.text { padding-right: $defaultPadding !important; } 
    }

    .padded { padding: $defaultPadding !important; }
    .padVert { padding: $defaultPadding 0 !important; }

    .placeholder { @include placeholderText; }

    .greyText { color: var(--grey) !important; }

    .noBG { background: none !important; }
    .noBorder { border: none !important; }

    .alignLeft { text-align: left !important; text-align-last: left !important; }
    .alignCenter { text-align: center !important; text-align-last: center !important; text-indent: 0 !important; }
    .alignRight { text-align: right !important; text-align-last: right !important; }

    .strong { 
        font: {
            weight: var(--fontWeightStrong) !important;
            style: var(--fontStyleStrong) !important;
            variant: var(--fontVariantStrong) !important;
        }
        text: {
            transform: var(--textTransformStrong) !important;
            shadow: var(--textShadowStrong) !important;
        }
    }
    
    .weak { 
        font: {
            weight: var(--fontWeightWeak) !important;
            style: var(--fontStyleWeak) !important;
            variant: var(--fontVariantWeak) !important;
        }
        text: {
            transform: var(--textTransformWeak) !important;
            shadow: var(--textShadowWeak) !important;
        }
    }

    .blur {
        filter: blur(3px) opacity(0.75) !important;
        transform-origin: 0% 0% !important;
        transform: scale(75%) !important;
    }

    .glow {
        filter: drop-shadow(0 0 5px var(--accentUp2)) drop-shadow(0 0 5px var(--accentUp2)) drop-shadow(0 0 5px var(--accentUp2));
    }

    .fader {
        opacity: 1;
        transition: 0.5s;
        &.fade25 { opacity: 0.75; }
        &.fade50 { opacity: 0.5; }
        &.fade75 { opacity: 0.25; }
        &.fade100 { opacity: 0; }
    }
    /* #endregion */

    /* #region GRADIATED CLASSES */
    @for $i from 1 through 10 {
        .width#{$i * 10} { width: $i * 10%; }
        .height#{$i * 10} { height: $i * 10%; }
    }
    .width25 { width: 25%; }
    .height25 { height: 25%; }
    .width75 { width: 75%; }
    .height75 { width: 75%; }
    .widthAuto {width: auto; }
    .heightAuto {height: auto; }
    /* #endregion */

    /* #region System-Specific Styles */
    .skill {
        width: 120px;
        text-align: center;
        text-align-last: center;
        background: {
            image: url("../images/textures/stoneWhite.jpg");
            size: 100%;
            repeat: no-repeat;
        }
        border: 4px outset var(--white);    
        @include box-shadow(3px, 3px, var(--greyDown2));
        &.empty {
            background-image: url("../images/textures/stoneGrey.jpg");
            border: 4px inset var(--grey);
            @include box-shadow(3px, 3px, var(--grey), true);
            opacity: 0.75;
            filter: blur(0.5px);
        }
    }
    /* #endregion */

    /* #region Buttons */
    div.closeButton {
        display: block;
        float: right;
        pointer-events: all;
        color: var(--white);
        cursor: pointer;
        position: relative;
        z-index: 4;
        top: 38px;
        right: 28px;
        background-color: black;
        font-size: 20px;
        text-align: center;
        text-align-last: center;
        line-height: 30px;
        border: 3px outset white;
        height: 36px;
        width: 36px;
        border-radius: 20px;
        background: rgba(0,0,0,0.6);
        transform: scale(0.8);
        margin-bottom:-36px;
        margin-top:-36px;
        
        &.collapsed {
            display: none !important;
        }
    }

    /* #endregion */

    /* #region Dragula Extension */
    .mirrorContainer {
        position: fixed !important;
        pointer-events: none;
        z-index: 9999999;
    }
    /* #endregion */
    /* #region Popouts/Tooltips */
    .tooltip {
        display: block;
        position: absolute;
        height: 40px;
        width: 40px;
        background-image: url("../images/ToolTipBall.png");
        background-size: 100%;
        z-index: 9999;
        background-position: center;
        right: 30px;

        > div {
            min-width: 300px; 
            max-width: 400px;
            top: 50%;
            left: 100%;
            transform: translate(0, -50%);
            padding: 5px;
            color: #444444;
            background-color: white;
            font-weight: normal;
            font-size: 13px;
            border-radius: 8px;
            position: absolute;
            z-index: 99999999;
            box-sizing: border-box;
            border: 10px outset var(--greyUp3);
            visibility: hidden; 
            opacity: 0; 
            transition: opacity 0.8s;
            p {
                font-family: "Della Respira";
                font-size: 12px;
            }
            i {
                position: absolute;
                top: 50%;
                right: 100%;
                margin-top: -25px;
                width: 50px;
                height: 50px;
                overflow: hidden;
                &::after {
                    content: '';
                    position: absolute;
                    width: 50px;
                    height: 50px;
                    top: 50%;
                    transform: translate(50%, -50%) rotate(-45deg);
                    background-color: white;
                    border: 10px outset #DDD;
                }
            }
        }
        
        &:hover > div { 
            visibility: visible;
            opacity: 1;
        }
    }

    .popout:not(.mirrorContainer) {
        position: absolute;
        overflow: hidden;
        z-index: 10;

        border: 10px outset var(--greyUp1);
        
        background: {
            image: url("../images/textures/stoneGrey.jpg");
        }
        box-sizing: content-box;
        border-radius: 40px;

        filter: drop-shadow(0px 0px 6px black);
                 
    }

    .popout {        
        > div { padding: 15px; }
         
        &#skillList {
            width: 150px;
            height: 480px;
            left: 94%;
            top: 0;
        }
        
        &#callingsList {
            width: 150px;
            height: 580px;
            left: 94%;
            top: 70px;
        }

        &#knacksList {
            width: 180px;
            left: -180px;
            top: 110px;

            h1.knackCategory {
                text-transform: uppercase;
                font-family: Oswald;
                color: var(--black);
                border: none;
                border-bottom: 2px solid black;
            }
            > div {
                padding: 0 0 15px 0;
            }
        }

        &.callingsList, &.knacksList {

            span.calling, span.knack, h1.gu-mirror.handle {
                display: block;
                color: var(--black);
                background: {
                    size: 100%;
                    position: center;
                    repeat: no-repeat;
                }
                border: none;
                font: {
                    family: Oswald;
                    weight: normal;
                }
                text: {
                    transform: uppercase;
                    shadow: var(--textShadowTitle);
                    align: center;
                }                
                filter: drop-shadow(2px 2px 2px black);

                &.invalid {
                    background-image: none;
                }
            }

            span.calling, h1.gu-mirror.handle {
                height: 40px;
                min-height: 40px;
                width: 120px;
                margin: 5px 0;
                background-image: url("../images/bubbles/calling-generic.png");
                font-size: 24px;
                line-height: 37px;

                &.patron {
                    background-image: url("../images/bubbles/calling-patron.png");
                }
            }

            span.knack {
                height: 20px;
                min-height: 20px;
                width: 170px;
                margin: 2px 0;
                background-image: url("../images/bubbles/knack-heroic.png");
                font-size: 12px;
                line-height: 20px;
                &.immortal {
                    background-image: url("../images/bubbles/knack-immortal.png");
                }
            }

        }     
    }
    /* #endregion */ 

    /* #region Dot Trackers */
    .dot {    
        --dotSize: 16px;
        --dotBright: #444;
        --dotDark: #0a0a0a;
        display: block;
        height: var(--dotSize);
        width: var(--dotSize);
        margin: 0;
        padding: 0;
        border-radius: 50%;
        background: radial-gradient(var(--dotBright), var(--dotDark));
        box-shadow: 1px 1px 2px var(--dotDark);
    
        &[data-types*="general"] {
            --dotBright: #fff;
            --dotDark: #333;
        }
        &[data-types*="physical"],
        &[data-types*="mental"],
        &[data-types*="social"] {
            --dotBright: #999;
            --dotDark: #0a0a0a;
        }
        &[data-types*="unassigned"] {
            --scaleFactor: 0.5;
            &::after {
                content: "";
                height: var(--dotSize);
                width: calc(var(--dotSize) / var(--scaleFactor));
                min-width: calc(var(--dotSize) / var(--scaleFactor));
                max-width: calc(var(--dotSize) / var(--scaleFactor));
                margin-left: calc(-0.5 * var(--dotSize));
                
                display: block;
                line-height: var(--dotSize);
                font-family: "Marcellus SC";
                font-weight: bold;
                font-size: var(--dotSize);
                color: var(--white);
                text-shadow: var(--textShadowStrong);
                text-align: center;
                text-align-last: center;
                transform: scaleX(var(--scaleFactor));
            }
            &[data-types*="physical"]::after { content: "P"; }
            &[data-types*="social"]::after { content: "S"; }
            &[data-types*="mental"]::after { content: "M"; }
        }
    
        &[class*="-invalid"] {
            --dotBright: #900;
            --dotDark: #ff0000;
        }
    }
    [class~="dotline"] {
        $numDots: 5;
        --numDots: #{$numDots};
        --dotSize: 16px;
        --colGap: 0px;
        --dotContainerWidth: calc(var(--dotSize) * var(--numDots) + var(--colGap) * (var(--numDots) - 1));
        display: flex;
        height: var(--dotSize);
        max-height: var(--dotSize);
        min-height: var(--dotSize);
        width: 100%;
        margin: 2px 0;
        flex: {
            direction: row;
            wrap: nowrap;
        }
        justify-content: space-between;
        align-items: center;
        &.noLabel { width: var(--dotContainerWidth); }
        &.space5 { --colGap: 5px; }
        > .label {
            display: inline-block;
            text-align: left;
            text-align-last: left;
            justify-self: flex-start;
            margin: 0;
            padding: 0;
            height: var(--dotSize);
            min-height: var(--dotSize);
            max-height: var(--dotSize);
            flex-grow: 1;
            flex-shrink: 0;
        }
        > .dotContainer {
            --dotContainerWidth: calc(var(--dotSize) * var(--numDots) + var(--colGap) * (var(--numDots) - 1));
            display: inline-grid;
            height: var(--dotSize);
            max-height: var(--dotSize);
            min-height: var(--dotSize);
            width: var(--dotContainerWidth);
            max-width: var(--dotContainerWidth);
            min-width: var(--dotContainerWidth);
            flex-grow: 0;
            flex-shrink: 0;
            justify-self: flex-end;
            @include repeat(var(--dotSize), 5, grid-template-columns, space);
            grid-template-rows: var(--dotSize);
            grid-column-gap: var(--colGap);
            &.blanks {
                margin-right: calc(-1 * var(--dotContainerWidth));
                .dot {
                    --dotBright: transparent;
                    --dotDark: transparent;
                    box-shadow: inset 1px 1px 1px var(--blackFade60), inset -1px -1px 1px var(--white);
                }
            }
        }        
        &.dots10 { 
            --numDots: 10;
            --dotContainerWidth: calc(var(--dotSize) * var(--numDots) + var(--colGap) * (var(--numDots) - 1));
            > .dotContainer { @include repeat(var(--dotSize), 10, grid-template-columns, space) }
        }
    }
    /* #endregion */

    /* #region Bubbles */
    .bubble {    
        overflow: hidden;     
        p {margin: 0;}
    }
    /* #endregion */

    /* #region Purview Display */
    [class|="purview"] {
        display: inline-block;
        height: 100px;
        width: 80px;
        background: {
            size: 100%;
            repeat: no-repeat;
            position: center;
        };
        filter: hue-rotate(var(--colorPurviewRotate));
        &[class*="sun"] { background-image: url("../images/purviews/sun.png"); }
        &[class*="passion"] { background-image: url("../images/purviews/passion.png"); }
        &[class*="geasa"] { background-image: url("../images/purviews/geasa.png"); }
        &[class*="beauty"] { background-image: url("../images/purviews/beauty.png"); }
        &[class*="fortune"] { background-image: url("../images/purviews/fortune.png"); }
        &[class*="metamorphosis"] { background-image: url("../images/purviews/metamorphosis.png"); }
        &[class*="prosperity"] { background-image: url("../images/purviews/prosperity.png"); }

        span.text {
            display: block;
            margin-top: 110%;
            text-align: center;
            font-family: Oswald;
            text-transform: uppercase;
            margin-top: 95px;
            font-size: 12px;
        }
    }
    /* #endregion */
}