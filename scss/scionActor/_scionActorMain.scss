& {
    pointer-events: none;
    border: none;
    box-shadow: none;
    background: none;

    header.window-header.flexrow.draggable.resizable {
        width: 65%;
        position: relative;
        z-index: 2;
        margin-bottom: -30px;
        margin-left: 20%;
        padding-left: 5%;
        border: none;
        overflow: visible;
        h4.window-title { display: none; }
        a.header-button {
            pointer-events: all;
            height: 1rem;
        }

    }
    header.window-header.flexrow.draggable.resizable::before {
        background-image: url("https://i.imgur.com/ADtHyUx.png");
        background-size: 80%;
        pointer-events: all;
        cursor: move;
        display: block;
        width: 100px;
        height: 100px;
        content: "";
        position: relative;
        background-repeat: no-repeat;
        left: -45%;
        bottom: -50%;
        background-color: red;
        border-radius: 50%;
        background-position: center;
    }

    div.window-resizable-handle {
        display: none;
        bottom: 6%;
        right: 6%;
        z-index: 3;
        pointer-events: all;
    }
    .window-content {
        color: var(--fontColorBody);
        padding: 0px;
        background: var(--bgColorMatte);
        pointer-events: all;
        border-radius: 25%;
        // border: 25px solid var(--fontColorTitle);
        overflow: hidden;
        position: relative;
        z-index: 1;
    }


    .Character {
        @keyframes characterSheet {
            from {opacity: 0;}
            to {opacity: 1;}
        }        
        .grid.main {
            height: 100%;
            width: 100%;
            padding: 0 2.8%;
            background: var(--bgColorMatte);
            background-image: var(--bgImage);
            background-size: 100%;
            background-repeat: repeat-y;
            opacity: 1;        
            animation-name: characterSheet;
            animation-duration: 1s;

            grid: ". nav ." 1.5rem
                  "header header header" 5.25rem
                  "body body body" auto
                  ". footer ." 1.5rem
                  /10% 1fr 10%;

            .sheet-tabs {
                grid-area: nav;
                height: 1.5rem;
                margin: 0px;
                border: none;

                .item {
                    line-height: 1.5rem;
                    font-weight: bold;
                    font-size: 1rem;
                    text-shadow: none;
                }
                .item.icon {
                    height: 20px;
                    width: 20px;
                    flex: none;
                    margin: 10px 5% -10px 5%;
                }
                .item:hover { background-color: var(--bgColorSoft); }
                .item.active { background-color: var(--bgColorStrong); }
            }
            .header {
                grid-area: header;

                .grid {
                    grid: ". charName . healthDisplay" 0.75rem
                          "legendDisplay charName . healthDisplay" 1.5rem
                          "legendDisplay parentage . ." 0.75rem
                          "legendDisplay parentage . xpDisplay" 0.75rem
                          ". title . xpDisplay" 1.5rem/150px 1fr 50px 100px;
                    grid: "charName" 2.25rem
                          "parentage" 1.5rem
                          "title" 1.5rem;
                    grid-gap: 0;

                    .legendDisplay {
                        grid-area: legendDisplay;
                        display: none;
                    }
                    .charName {
                        grid-area: charName;
                        input[type="text"] { 
                            color: var(--fontColorTitle);
                            background-color: var(--bgColorTitle);
                            font-family: var(--fontFamilyTitle);
                            font-style: var(--fontStyleTitle);
                            font-variant: var(--fontVariantTitle);
                            font-weight: var(--fontWeightTitle);
                            text-transform: var(--textTransformTitle);
                            font-size: var(--fontSizeTitle);
                            text-shadow: var(--textShadowTitle);
                            text-align: center;
                            line-height: 1.5rem;
                        }
                    }
                    .healthDisplay {
                        grid-area: healthDisplay;
                        display: none;
                    }
                    .parentage {
                        grid-area: parentage;
                        textarea {
                            color: var(--fontColorSubTitle);
                            background-color: var(--bgColorSubTitle);
                            font-family: var(--fontFamilySubTitle);
                            font-style: var(--fontStyleSubTitle);
                            font-variant: var(--fontVariantSubTitle);
                            font-weight: var(--fontWeightSubTitle);
                            text-transform: var(--textTransformSubTitle);
                            font-size: var(--fontSizeSubTitle);
                            text-shadow: var(--textShadowSubTitle);
                            text-align: center;
                            line-height: 1rem;
                        }
                    }
                    .title,
                    .title input[type="text"] {
                        grid-area: title;
                        color: var(--fontColorSubSubTitle);
                        background-color: var(--bgColorSubSubTitle);
                        font-family: var(--fontFamilySubSubTitle);
                        font-style: var(--fontStyleSubSubTitle);
                        font-variant: var(--fontVariantSubSubTitle);
                        font-weight: var(--fontWeightSubSubTitle);
                        text-transform: var(--textTransformSubSubTitle);
                        font-size: var(--fontSizeSubSubTitle);
                        text-shadow: var(--textShadowSubSubTitle);
                        text-align: center;
                        line-height: 1rem;
                    }
                    .xpDisplay {
                        grid-area: xpDisplay;
                        display: none;
                    }
                }
            }
            .sheet-body {
                grid-area: body;

                .settings {
                    .grid {
                        grid: "tier pantheon heritage parent" 2rem
                        / 12% 20% 15% 1fr;
                        .tier {
                            grid-area: tier;
                        }
                        .pantheon {
                            grid-area: pantheon;
                        }
                        .parent {
                            grid-area: parent;
                        }
                        .heritage {
                            grid-area: heritage;
                        }
                    }
                }

                .front {
                    .grid {
                        grid: "attributes paths"  10rem
                              "virtues paths" 2rem
                            / 1fr 2fr;
                        .attributes {
                            grid-area: attributes;
                        }
                        .paths {
                            grid-area: paths;
                        }
                        .virtues {
                            grid-area: virtues;
                        }
                    }                    
                }
                .heritage {
                    .grid {
                        grid: "heritage heritage" 4rem
                              "paths paths" 10rem
                              "virtues ." 2rem
                            / 1fr 1fr;
                        .heritage {
                            grid-area: attributes;
                        }
                        .paths {
                            grid-area: paths;
                        }
                        .virtues {
                            grid-area: virtues;
                        }
                    }
                }
                .details {
                    .grid {
                        grid: "attributes paths" 8rem
                            "virtues paths" 20rem
                            / 1fr 2fr;
                        .attributes {
                            grid-area: attributes;
                        }
                        .paths {
                            grid-area: paths;
                        }
                        .virtues {
                            grid-area: virtues;
                        }
                    }
                }
                .experience {
                    .grid {
                        grid: "paths" 4rem
                              "virtues" 10rem
                            / 1fr;
                        .paths {
                            grid-area: paths;
                        }
                        .virtues {
                            grid-area: virtues;
                        }
                    }
                }
            }
        }
    }
}