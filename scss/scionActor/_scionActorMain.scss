& {
    pointer-events: none;
    border: none;
    box-shadow: none;
    background: none;

    header.window-header.flexrow.draggable.resizable {
        height: 1rem;
        width: 65%;
        margin: -1rem 0 0 20%;
        padding: 0 0 0 5%;
        display: block;
        flex: none;
        position: relative;
        z-index: 2;
        overflow: visible;
        border: none;
        h4.window-title { display: none; }
        a {
            opacity: 0;
        }
        a.header-button {
            pointer-events: all;
            height: 1rem;
        }
        &::after {
            background: transparent;
            pointer-events: all;
            cursor: move;
            display: block;
            width: 200px;
            height: 200px;
            content: "";
            position: relative;
            left: -57%;
            top: -550%;
            border-radius: 50%;
        }
    }

    div.window-resizable-handle {
        display: none;
        bottom: 6%;
        right: 6%;
        z-index: 3;
        pointer-events: all;
    }

    /* HOW TO TRIGGER A FUNCTION WHEN AN ANIMATION OR TRANSITION IS COMPLETE:

        $( '.item' ).addClass( 'disappear' ).on( 'webkitAnimationEnd mozAnimationEnd oAnimationEnd oanimationend animationend', () => { $( this ).remove(); });
            // The added "disappear" class contains either an animation or a transition, which starts immediately.
            //    When the animation/transition is finished, the callback function removes the element.
    */

    .window-content {
        padding: 0px;
        background: transparent;
        pointer-events: none;
        overflow: visible;
        position: relative;
        z-index: 1;
    }

    .Character {
        .main {
            height: 100%;
            width: 100%;
            padding: 2% 8% 8% 6%;
            background-image: var(--bgImage);
            background-size: 100%;
            background-repeat: repeat-y;
            opacity: 1;        

            grid: ". nav ." 1.3rem
                  "header header header" 6rem
                  "body body body" auto
                  ". footer ." 1.5rem
                  /12% 1fr 12%;

            .sheet-tabs {
                opacity: 0;
                grid-area: nav;
                height: 100%;
                margin: 0px;
                padding-top: 1px;
                border: none;
                pointer-events: all;

                .item {
                    height: 100%;
                    line-height: 1.25rem;
                    font-weight: bold;
                    font-size: 0.75rem;
                    text-shadow: none;
                }
                .item.icon {
                    height: 20px;
                    width: 20px;
                    flex: none;
                    margin: -20px -20px 0 0;
                    color: white;
                    font-size: 1rem;

                }
                .item:hover { background-color: var(--bgColorSoft); }
                .item.active { background-color: var(--bgColorStrong); }
                .item.icon:hover { background-color: transparent; color: var(--fontColorSubTitle); }
                .item.icon.active { background-color: transparent; color: var(--fontColorSurTitle); }
            }
            .menuRosette {                
                background-image: var(--menuRosetteImg);
                background-size: 90%;
                // pointer-events: all;
                // cursor: move;
                display: block;
                width: 200px;
                height: 200px;
                content: "";
                position: relative;
                background-repeat: no-repeat;
                left: -100%;
                top: -250%;
                border-radius: 50%;
                background-position: center;
            }
            .header {
                grid-area: header;
                grid:   ". . ." 0.5rem
                        ". divineTitle ." 1.5rem
                        ". charName ." 3rem
                        "patronage patronage patronage" 1.5rem
                        /12% 1fr 12%;
                grid-gap: 0;

                div { pointer-events: all; }

                .divineTitle { grid-area: divineTitle; }
                .charName { grid-area: charName; }
                .patronage { grid-area: patronage; }
            }
            .sheet-body {
                grid-area: body;
                pointer-events: all;

                .settings {            
                    grid-template-columns: 12.5% 12.5% 12.5% 12.5% 12.5% 12.5% 12.5% 12.5%;
                    grid-template-rows: 2rem 0.5rem 1.25rem 2rem 0.5rem 1.25rem 2rem 0.5rem 1.25rem 2rem 0.5rem 1.5rem 2rem;
                    row-gap: 0.25rem;

                    div.grid {
                        padding: 0 0.25rem;
                        &.edit {
                            line-height: 1.75rem;
                            line-height: normal;
                        }
                        &.dragContainer {
                            background-color: rgba(0,0,0,0.1);
                            border: 3px inset var(--scale6);
                            border-radius: 19px;
                            div {
                                display: inline-block;
                                width: 30%;
                                margin: 0px 1.5%;
                                color: white;
                                font-size: 1.4rem;
                                font-weight: bold;
                                text-align: center;
                                line-height: 26px;
                                border: 3px outset grey;
                                box-shadow: 2px 2px 2px grey;
                                background-image: linear-gradient(0deg,rgba(0,0,0,0.7),transparent);
                                font-family: var(--fontFamilySubTitle);
                                color: var(--bgColorStrong);
                                border-radius: 1rem;
                                text-shadow: 1px 1px 1px rgba(255,255,255,0.2), -1px -1px 1px rgba(0,0,0,1);
                            }
                            .red {background-color: var(--scaleX);}
                            .blue {background-color: var(--scale8);}
                            .green {background-color: var(--scale6);}
                        }
                    }

                    

                }
                .front {
                    grid: "attributes paths"  17rem
                        "virtues paths" calc(3.25rem + 2 * 3px)
                        / 1fr 2fr;
                    column-gap: 0.5rem;
                    .attributes {
                        grid-area: attributes;

                        flex-flow: column nowrap;
                        justify-content: space-between;
                        align-items: center;

                        .dotGrabBin {
                            flex-wrap: wrap;
                            height: auto;
                            justify-content: flex-end;
                        }

                        .attrBlock {                            
                            margin: 0.5rem 0;
                            flex-flow: column nowrap;

                            .attrRow {
                                .label {
                                    font-size: 1rem;
                                }
                            }
                        }
                        .primary {
                            order: 1;
                        }
                        .secondary {
                            order: 2;
                        }
                        .tertiary {
                            order: 3;
                        }
                    }
                    .paths {
                        grid-area: paths;
                        grid: "heading" 1.5rem
                              "originpath" 5rem
                              "rolepath" 5rem
                              "pantheonpath" 5rem;
                        .heading { grid-area: heading; }
                        .originpath { grid-area: originpath; }
                        .rolepath { grid-area: rolepath; }
                        .pantheonpath { grid-area: pantheonpath }                        
                    }
                    .virtues {
                        border-radius: 1rem;
                        grid-area: virtues;
                        grid: "leftvirtue leftvirtue leftvirtue" 1rem
                              ". dotline ." 1.25rem
                              "rightvirtue rightvirtue rightvirtue" 1rem / 1fr 6.25rem 1fr;
                        background-color: var(--scaleFade5);
                        border: 3px outset var(--scale5);
                        box-sizing: content-box;
                        margin-left: -0.35rem;
                        height: calc(100% - 2 * 3px);
                        .leftvirtue { grid-area: leftvirtue; margin-left: 0.5rem; line-height: 1rem; }
                        .dotline { grid-area: dotline; }
                        .rightvirtue { grid-area: rightvirtue; margin-right: 0.5rem; line-height: 1rem; }
                    }
                }                    
                .genesis {
                    grid: "genesis genesis" 4rem
                            "paths paths" 10rem
                            "virtues ." 2rem
                        / 1fr 1fr;
                    .genesis {
                        grid-area: attributes;
                    }
                    .paths {
                        grid-area: paths;
                    }
                    .virtues {
                        grid-area: virtues;
                    }
                }
                .details {
                    grid: "attributes paths" 8rem
                        "virtues paths" 20rem
                        / 1fr 2fr;
                    .attributes {
                        grid-area: attributes;
                    }
                    .paths {
                        grid-area: paths;
                    }
                    .virtues {
                        grid-area: virtues;
                    }
                }
                .experience {
                    grid: "paths" 4rem
                            "virtues" 10rem
                        / 1fr;
                    .paths {
                        grid-area: paths;
                    }
                    .virtues {
                        grid-area: virtues;
                    }
                }
            }
        }
    }
}